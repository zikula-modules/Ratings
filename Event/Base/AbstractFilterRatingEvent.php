<?php
/**
 * Ratings.
 *
 * @copyright Timothy Paustian (Paustian)
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @author Timothy Paustian <tdpaustian@gmail.com>.
 * @link https://www.microbiologytext.com/
 * @link https://ziku.la
 * @version Generated by ModuleStudio 1.3.2 (https://modulestudio.de).
 */

namespace Paustian\RatingsModule\Event\Base;

use Symfony\Component\EventDispatcher\Event;
use Paustian\RatingsModule\Entity\RatingEntity;

/**
 * Event base class for filtering rating processing.
 */
class AbstractFilterRatingEvent extends Event
{
    /**
     * @var RatingEntity Reference to treated entity instance.
     */
    protected $rating;

    /**
     * @var array Entity change set for preUpdate events.
     */
    protected $entityChangeSet = [];

    /**
     * FilterRatingEvent constructor.
     *
     * @param RatingEntity $rating Processed entity
     * @param array $entityChangeSet Change set for preUpdate events
     */
    public function __construct(RatingEntity $rating, array $entityChangeSet = [])
    {
        $this->rating = $rating;
        $this->entityChangeSet = $entityChangeSet;
    }

    /**
     * Returns the entity.
     *
     * @return RatingEntity
     */
    public function getRating()
    {
        return $this->rating;
    }

    /**
     * Returns the change set.
     *
     * @return array Entity change set
     */
    public function getEntityChangeSet()
    {
        return $this->entityChangeSet;
    }
}
