<?php

/**
 * Ratings.
 *
 * @copyright Timothy Paustian (Paustian)
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @author Timothy Paustian <tdpaustian@gmail.com>.
 * @see https://www.microbiologytext.com/
 * @see https://ziku.la
 * @version Generated by ModuleStudio 1.4.0 (https://modulestudio.de).
 */

namespace Paustian\RatingsModule\Helper\Base;

use Zikula\Common\Translator\TranslatorInterface;
use Zikula\Core\Doctrine\EntityAccess;
use Paustian\RatingsModule\Entity\RatingSystemEntity;
use Paustian\RatingsModule\Entity\RatingEntity;
use Paustian\RatingsModule\Helper\ListEntriesHelper;

/**
 * Entity display helper base class.
 */
abstract class AbstractEntityDisplayHelper
{
    /**
     * @var TranslatorInterface
     */
    protected $translator;
    
    /**
     * @var ListEntriesHelper Helper service for managing list entries
     */
    protected $listEntriesHelper;
    
    public function __construct(
        TranslatorInterface $translator,
        ListEntriesHelper $listEntriesHelper
    ) {
        $this->translator = $translator;
        $this->listEntriesHelper = $listEntriesHelper;
    }
    
    /**
     * Returns the formatted title for a given entity.
     *
     * @param EntityAccess $entity The given entity instance
     *
     * @return string The formatted title
     */
    public function getFormattedTitle(EntityAccess $entity)
    {
        if ($entity instanceof RatingSystemEntity) {
            return $this->formatRatingSystem($entity);
        }
        if ($entity instanceof RatingEntity) {
            return $this->formatRating($entity);
        }
    
        return '';
    }
    
    /**
     * Returns the formatted title for a given entity.
     *
     * @param RatingSystemEntity $entity The given entity instance
     *
     * @return string The formatted title
     */
    protected function formatRatingSystem(RatingSystemEntity $entity)
    {
        return $this->translator->__f(
            '%id%, %scaleDim%, %iconUrl%, %iconFa%',
            [
                '%id%' => $entity->getId(),
                '%scaleDim%' => $entity->getScaleDim(),
                '%iconUrl%' => $entity->getIconUrl(),
                '%iconFa%' => $entity->getIconFa()
            ]
        );
    }
    
    /**
     * Returns the formatted title for a given entity.
     *
     * @param RatingEntity $entity The given entity instance
     *
     * @return string The formatted title
     */
    protected function formatRating(RatingEntity $entity)
    {
        return $this->translator->__f(
            '%id%, %moduleName%, %objectId%, %rating%, %ratingSystem%',
            [
                '%id%' => $entity->getId(),
                '%moduleName%' => $entity->getModuleName(),
                '%objectId%' => $entity->getObjectId(),
                '%rating%' => $entity->getRating(),
                '%ratingSystem%' => $entity->getRatingSystem()
            ]
        );
    }
    
    /**
     * Returns name of the field used as title / name for entities of this repository.
     *
     * @param string $objectType Name of treated entity type
     *
     * @return string Name of field to be used as title
     */
    public function getTitleFieldName($objectType = '')
    {
        if ('ratingSystem' === $objectType) {
            return 'iconFa';
        }
        if ('rating' === $objectType) {
            return 'moduleName';
        }
    
        return '';
    }
    
    /**
     * Returns name of the field used for describing entities of this repository.
     *
     * @param string $objectType Name of treated entity type
     *
     * @return string Name of field to be used as description
     */
    public function getDescriptionFieldName($objectType = '')
    {
        if ('ratingSystem' === $objectType) {
            return 'iconFa';
        }
        if ('rating' === $objectType) {
            return 'moduleName';
        }
    
        return '';
    }
    
    /**
     * Returns name of the date(time) field to be used for representing the start
     * of this object. Used for providing meta data to the tag module.
     *
     * @param string $objectType Name of treated entity type
     *
     * @return string Name of field to be used as date
     */
    public function getStartDateFieldName($objectType = '')
    {
        if ('ratingSystem' === $objectType) {
            return 'createdDate';
        }
        if ('rating' === $objectType) {
            return 'createdDate';
        }
    
        return '';
    }
}
