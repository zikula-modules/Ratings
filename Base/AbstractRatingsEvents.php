<?php

/**
 * Ratings.
 *
 * @copyright Timothy Paustian (Paustian)
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @author Timothy Paustian <tdpaustian@gmail.com>.
 * @see https://www.microbiologytext.com/
 * @see https://ziku.la
 * @version Generated by ModuleStudio 1.4.0 (https://modulestudio.de).
 */

namespace Paustian\RatingsModule\Base;

use Paustian\RatingsModule\Listener\EntityLifecycleListener;
use Paustian\RatingsModule\Menu\MenuBuilder;

/**
 * Events definition base class.
 */
abstract class AbstractRatingsEvents
{
    /**
     * The paustianratingsmodule.itemactionsmenu_pre_configure event is thrown before the item actions
     * menu is built in the menu builder.
     *
     * The event listener receives an
     * Paustian\RatingsModule\Event\ConfigureItemActionsMenuEvent instance.
     *
     * @see MenuBuilder::createItemActionsMenu()
     * @var string
     */
    const MENU_ITEMACTIONS_PRE_CONFIGURE = 'paustianratingsmodule.itemactionsmenu_pre_configure';
    
    /**
     * The paustianratingsmodule.itemactionsmenu_post_configure event is thrown after the item actions
     * menu has been built in the menu builder.
     *
     * The event listener receives an
     * Paustian\RatingsModule\Event\ConfigureItemActionsMenuEvent instance.
     *
     * @see MenuBuilder::createItemActionsMenu()
     * @var string
     */
    const MENU_ITEMACTIONS_POST_CONFIGURE = 'paustianratingsmodule.itemactionsmenu_post_configure';
    
    /**
     * The paustianratingsmodule.viewactionsmenu_pre_configure event is thrown before the view actions
     * menu is built in the menu builder.
     *
     * The event listener receives an
     * Paustian\RatingsModule\Event\ConfigureViewActionsMenuEvent instance.
     *
     * @see MenuBuilder::createViewActionsMenu()
     * @var string
     */
    const MENU_VIEWACTIONS_PRE_CONFIGURE = 'paustianratingsmodule.viewactionsmenu_pre_configure';
    
    /**
     * The paustianratingsmodule.viewactionsmenu_post_configure event is thrown after the view actions
     * menu has been built in the menu builder.
     *
     * The event listener receives an
     * Paustian\RatingsModule\Event\ConfigureViewActionsMenuEvent instance.
     *
     * @see MenuBuilder::createViewActionsMenu()
     * @var string
     */
    const MENU_VIEWACTIONS_POST_CONFIGURE = 'paustianratingsmodule.viewactionsmenu_post_configure';
    
    /**
     * The paustianratingsmodule.ratingsystem_post_load event is thrown when rating systems
     * are loaded from the database.
     *
     * The event listener receives an
     * Paustian\RatingsModule\Event\FilterRatingSystemEvent instance.
     *
     * @see EntityLifecycleListener::postLoad()
     * @var string
     */
    const RATINGSYSTEM_POST_LOAD = 'paustianratingsmodule.ratingsystem_post_load';
    
    /**
     * The paustianratingsmodule.ratingsystem_pre_persist event is thrown before a new rating system
     * is created in the system.
     *
     * The event listener receives an
     * Paustian\RatingsModule\Event\FilterRatingSystemEvent instance.
     *
     * @see EntityLifecycleListener::prePersist()
     * @var string
     */
    const RATINGSYSTEM_PRE_PERSIST = 'paustianratingsmodule.ratingsystem_pre_persist';
    
    /**
     * The paustianratingsmodule.ratingsystem_post_persist event is thrown after a new rating system
     * has been created in the system.
     *
     * The event listener receives an
     * Paustian\RatingsModule\Event\FilterRatingSystemEvent instance.
     *
     * @see EntityLifecycleListener::postPersist()
     * @var string
     */
    const RATINGSYSTEM_POST_PERSIST = 'paustianratingsmodule.ratingsystem_post_persist';
    
    /**
     * The paustianratingsmodule.ratingsystem_pre_remove event is thrown before an existing rating system
     * is removed from the system.
     *
     * The event listener receives an
     * Paustian\RatingsModule\Event\FilterRatingSystemEvent instance.
     *
     * @see EntityLifecycleListener::preRemove()
     * @var string
     */
    const RATINGSYSTEM_PRE_REMOVE = 'paustianratingsmodule.ratingsystem_pre_remove';
    
    /**
     * The paustianratingsmodule.ratingsystem_post_remove event is thrown after an existing rating system
     * has been removed from the system.
     *
     * The event listener receives an
     * Paustian\RatingsModule\Event\FilterRatingSystemEvent instance.
     *
     * @see EntityLifecycleListener::postRemove()
     * @var string
     */
    const RATINGSYSTEM_POST_REMOVE = 'paustianratingsmodule.ratingsystem_post_remove';
    
    /**
     * The paustianratingsmodule.ratingsystem_pre_update event is thrown before an existing rating system
     * is updated in the system.
     *
     * The event listener receives an
     * Paustian\RatingsModule\Event\FilterRatingSystemEvent instance.
     *
     * @see EntityLifecycleListener::preUpdate()
     * @var string
     */
    const RATINGSYSTEM_PRE_UPDATE = 'paustianratingsmodule.ratingsystem_pre_update';
    
    /**
     * The paustianratingsmodule.ratingsystem_post_update event is thrown after an existing new rating system
     * has been updated in the system.
     *
     * The event listener receives an
     * Paustian\RatingsModule\Event\FilterRatingSystemEvent instance.
     *
     * @see EntityLifecycleListener::postUpdate()
     * @var string
     */
    const RATINGSYSTEM_POST_UPDATE = 'paustianratingsmodule.ratingsystem_post_update';
    
    /**
     * The paustianratingsmodule.rating_post_load event is thrown when ratings
     * are loaded from the database.
     *
     * The event listener receives an
     * Paustian\RatingsModule\Event\FilterRatingEvent instance.
     *
     * @see EntityLifecycleListener::postLoad()
     * @var string
     */
    const RATING_POST_LOAD = 'paustianratingsmodule.rating_post_load';
    
    /**
     * The paustianratingsmodule.rating_pre_persist event is thrown before a new rating
     * is created in the system.
     *
     * The event listener receives an
     * Paustian\RatingsModule\Event\FilterRatingEvent instance.
     *
     * @see EntityLifecycleListener::prePersist()
     * @var string
     */
    const RATING_PRE_PERSIST = 'paustianratingsmodule.rating_pre_persist';
    
    /**
     * The paustianratingsmodule.rating_post_persist event is thrown after a new rating
     * has been created in the system.
     *
     * The event listener receives an
     * Paustian\RatingsModule\Event\FilterRatingEvent instance.
     *
     * @see EntityLifecycleListener::postPersist()
     * @var string
     */
    const RATING_POST_PERSIST = 'paustianratingsmodule.rating_post_persist';
    
    /**
     * The paustianratingsmodule.rating_pre_remove event is thrown before an existing rating
     * is removed from the system.
     *
     * The event listener receives an
     * Paustian\RatingsModule\Event\FilterRatingEvent instance.
     *
     * @see EntityLifecycleListener::preRemove()
     * @var string
     */
    const RATING_PRE_REMOVE = 'paustianratingsmodule.rating_pre_remove';
    
    /**
     * The paustianratingsmodule.rating_post_remove event is thrown after an existing rating
     * has been removed from the system.
     *
     * The event listener receives an
     * Paustian\RatingsModule\Event\FilterRatingEvent instance.
     *
     * @see EntityLifecycleListener::postRemove()
     * @var string
     */
    const RATING_POST_REMOVE = 'paustianratingsmodule.rating_post_remove';
    
    /**
     * The paustianratingsmodule.rating_pre_update event is thrown before an existing rating
     * is updated in the system.
     *
     * The event listener receives an
     * Paustian\RatingsModule\Event\FilterRatingEvent instance.
     *
     * @see EntityLifecycleListener::preUpdate()
     * @var string
     */
    const RATING_PRE_UPDATE = 'paustianratingsmodule.rating_pre_update';
    
    /**
     * The paustianratingsmodule.rating_post_update event is thrown after an existing new rating
     * has been updated in the system.
     *
     * The event listener receives an
     * Paustian\RatingsModule\Event\FilterRatingEvent instance.
     *
     * @see EntityLifecycleListener::postUpdate()
     * @var string
     */
    const RATING_POST_UPDATE = 'paustianratingsmodule.rating_post_update';
}
