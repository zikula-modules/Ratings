<?php

/**
 * Ratings.
 *
 * @copyright Timothy Paustian (Paustian)
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @author Timothy Paustian <tdpaustian@gmail.com>.
 * @see https://www.microbiologytext.com/
 * @see https://ziku.la
 * @version Generated by ModuleStudio 1.4.0 (https://modulestudio.de).
 */

namespace Paustian\RatingsModule\Validator\Constraints;

use Symfony\Component\Validator\Constraint;
use Symfony\Component\Validator\ConstraintValidator;
use Zikula\Common\Translator\TranslatorInterface;
use Zikula\Common\Translator\TranslatorTrait;
use function GuzzleHttp\Psr7\try_fopen;

/**
 * List entry validator.
 */
class IconUrlGroupValidator extends ConstraintValidator
{
    use TranslatorTrait;

    public $rootDir;


    public function __construct(TranslatorInterface $translator, $root_directory)
    {
        $this->setTranslator($translator);
        $this->rootDir = $root_directory;
    }

    public function setTranslator(TranslatorInterface $translator)
    {
        $this->translator = $translator;
    }

    public function validate($value, Constraint $constraint)
    {
        $data = $this->context->getRoot()->getData();
        //If this is empty, then check to make sure the url icons are full
        if(!preg_match('/\S/', $value)){
            if( !preg_match('/\S/', $data->getIconFa()) ||
                !preg_match('/\S/', $data->getHalfIconFa()) ||
                !preg_match('/\S/', $data->getEmptyIconFa()) ){
                $this->context->buildViolation($this->__("If this string is empty then the faIcon strings have to be specified."))->addViolation();
            }
            //If the string is empty, we don't need to check further.
            return;
        }
        //check for the file it points to
        if(!file_exists($this->rootDir . '/'.  $value)){
            $this->context->buildViolation($this->__("This file path does not exist."))->addViolation();
        }
    }
}
